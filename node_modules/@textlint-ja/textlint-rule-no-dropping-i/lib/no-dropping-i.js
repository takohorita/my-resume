// LICENSE : MIT
"use strict";

var _textlintRuleHelper = require("textlint-rule-helper");

var _kuromojin = require("kuromojin");

function isTargetWord(token) {
  return token.pos === "助詞" && token.pos_detail_1 === "接続助詞" && token.basic_form === "て";
}

function isMasuWord(token) {
  return token.pos === "助動詞" && token.pos_detail_1 === "*" && token.basic_form === "ます";
}

module.exports = function (context) {
  var helper = new _textlintRuleHelper.RuleHelper(context);
  var {
    Syntax,
    report,
    getSource,
    RuleError
  } = context;
  return {
    [Syntax.Str](node) {
      if (helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote, Syntax.Emphasis])) {
        return;
      }

      var text = getSource(node);
      return (0, _kuromojin.tokenize)(text).then(tokens => {
        tokens.forEach((token, index) => {
          var current = token;
          var prev = tokens[index - 1];

          if (!prev || !current) {
            return;
          }

          if (isTargetWord(prev) && isMasuWord(current)) {
            report(node, new RuleError("い抜き言葉を使用しています。", {
              index: current.word_position - 1
            }));
          }
        });
      });
    }

  };
};
//# sourceMappingURL=no-dropping-i.js.map
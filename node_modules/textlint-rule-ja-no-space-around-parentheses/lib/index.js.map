{"version":3,"file":"index.js","names":["_textlintRuleHelper","require","_matchIndex","brackets","leftBrackets","map","bracket","RegExp","rightBrackets","reporter","context","Syntax","RuleError","report","fixer","getSource","helper","RuleHelper","Str","node","isPlainStrNode","text","forEach","pattern","matchCaptureGroupAll","match","index","fix","replaceTextRange","module","exports","linter"],"sources":["../src/index.js"],"sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n かっこ類と隣接する文字の間のスペースの有無\n かっこの外側、内側ともにスペースを入れません。\n */\nimport { RuleHelper } from \"textlint-rule-helper\";\nimport { matchCaptureGroupAll } from \"match-index\";\n\nconst brackets = [\"\\\\[\", \"\\\\]\", \"（\", \"）\", \"［\", \"］\", \"「\", \"」\", \"『\", \"』\"];\n\nconst leftBrackets = brackets.map((bracket) => {\n    return new RegExp(\"([ 　])\" + bracket, \"g\");\n});\nconst rightBrackets = brackets.map((bracket) => {\n    return new RegExp(bracket + \"([ 　])\", \"g\");\n});\nfunction reporter(context) {\n    const { Syntax, RuleError, report, fixer, getSource } = context;\n    const helper = new RuleHelper();\n    return {\n        [Syntax.Str](node) {\n            if (!helper.isPlainStrNode(node)) {\n                return;\n            }\n            const text = getSource(node);\n            // 左にスペース\n            leftBrackets.forEach((pattern) => {\n                matchCaptureGroupAll(text, pattern).forEach((match) => {\n                    const { index } = match;\n                    report(\n                        node,\n                        new RuleError(\"かっこの外側、内側ともにスペースを入れません。\", {\n                            index: index,\n                            fix: fixer.replaceTextRange([index, index + 1], \"\")\n                        })\n                    );\n                });\n            });\n            // 右にスペース\n            rightBrackets.forEach((pattern) => {\n                matchCaptureGroupAll(text, pattern).forEach((match) => {\n                    const { index, text } = match;\n                    report(\n                        node,\n                        new RuleError(\"かっこの外側、内側ともにスペースを入れません。\", {\n                            index: index,\n                            fix: fixer.replaceTextRange([index, index + 1], \"\")\n                        })\n                    );\n                });\n            });\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA,IAAAA,mBAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAEA,IAAME,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAEvE,IAAMC,YAAY,GAAGD,QAAQ,CAACE,GAAG,CAAEC,OAAO,IAAK;EAC3C,OAAO,IAAIC,MAAM,CAAC,QAAQ,GAAGD,OAAO,EAAE,GAAG,CAAC;AAC9C,CAAC,CAAC;AACF,IAAME,aAAa,GAAGL,QAAQ,CAACE,GAAG,CAAEC,OAAO,IAAK;EAC5C,OAAO,IAAIC,MAAM,CAACD,OAAO,GAAG,QAAQ,EAAE,GAAG,CAAC;AAC9C,CAAC,CAAC;AACF,SAASG,QAAQA,CAACC,OAAO,EAAE;EACvB,IAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGL,OAAO;EAC/D,IAAMM,MAAM,GAAG,IAAIC,8BAAU,CAAC,CAAC;EAC/B,OAAO;IACH,CAACN,MAAM,CAACO,GAAG,EAAEC,IAAI,EAAE;MACf,IAAI,CAACH,MAAM,CAACI,cAAc,CAACD,IAAI,CAAC,EAAE;QAC9B;MACJ;MACA,IAAME,IAAI,GAAGN,SAAS,CAACI,IAAI,CAAC;MAC5B;MACAf,YAAY,CAACkB,OAAO,CAAEC,OAAO,IAAK;QAC9B,IAAAC,gCAAoB,EAACH,IAAI,EAAEE,OAAO,CAAC,CAACD,OAAO,CAAEG,KAAK,IAAK;UACnD,IAAM;YAAEC;UAAM,CAAC,GAAGD,KAAK;UACvBZ,MAAM,CACFM,IAAI,EACJ,IAAIP,SAAS,CAAC,yBAAyB,EAAE;YACrCc,KAAK,EAAEA,KAAK;YACZC,GAAG,EAAEb,KAAK,CAACc,gBAAgB,CAAC,CAACF,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE;UACtD,CAAC,CACL,CAAC;QACL,CAAC,CAAC;MACN,CAAC,CAAC;MACF;MACAlB,aAAa,CAACc,OAAO,CAAEC,OAAO,IAAK;QAC/B,IAAAC,gCAAoB,EAACH,IAAI,EAAEE,OAAO,CAAC,CAACD,OAAO,CAAEG,KAAK,IAAK;UACnD,IAAM;YAAEC,KAAK;YAAEL;UAAK,CAAC,GAAGI,KAAK;UAC7BZ,MAAM,CACFM,IAAI,EACJ,IAAIP,SAAS,CAAC,yBAAyB,EAAE;YACrCc,KAAK,EAAEA,KAAK;YACZC,GAAG,EAAEb,KAAK,CAACc,gBAAgB,CAAC,CAACF,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE;UACtD,CAAC,CACL,CAAC;QACL,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ,CAAC;AACL;AACAG,MAAM,CAACC,OAAO,GAAG;EACbC,MAAM,EAAEtB,QAAQ;EAChBK,KAAK,EAAEL;AACX,CAAC"}
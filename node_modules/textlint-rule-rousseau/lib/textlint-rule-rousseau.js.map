{"version":3,"file":"textlint-rule-rousseau.js","names":["defaultOptions","showLevels","ignoreTypes","ignoreInlineNodeTypes","mapNode","ast","mapFn","preorder","node","index","parent","newNode","Object","assign","children","map","child","module","exports","textlintRousseau","context","options","helper","RuleHelper","ignoreNodeManager","IgnoreNodeManager","Syntax","RuleError","report","getSource","Code","isShowType","type","indexOf","isShowLevel","level","createSuggest","replacements","length","value","join","reportError","source","result","originalIndexFromIndex","isIgnoredIndex","suggestions","ruleError","message","Paragraph","isChildNode","Link","Image","BlockQuote","Emphasis","ignoreChildrenByTypes","filteredNode","Array","StringSource","text","toString","reportSourceError","results","rousseau","err","forEach"],"sources":["../src/textlint-rule-rousseau.js"],"sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { RuleHelper, IgnoreNodeManager } from \"textlint-rule-helper\";\nimport { StringSource } from \"textlint-util-to-string\";\nimport rousseau from \"@textlint-rule/rousseau\";\nimport map from \"unist-util-map\";\n\nconst defaultOptions = {\n    // \"suggestion\", \"warning\", \"error\"\n    showLevels: [\"suggestion\", \"warning\", \"error\"],\n    // ignore check type of https://github.com/GitbookIO/rousseau#checks\n    ignoreTypes: [],\n    // ignore textlint's node type\n    ignoreInlineNodeTypes: [\"Code\"]\n};\n\nconst mapNode = function (ast, mapFn) {\n    return (function preorder(node, index, parent) {\n        const newNode = Object.assign({}, mapFn(node, index, parent));\n        if (node.children) {\n            newNode.children = node.children.map(function (child, index) {\n                return preorder(child, index, node);\n            });\n        }\n        return newNode;\n    }(ast, null, null));\n};\n\nmodule.exports = function textlintRousseau(context, options = defaultOptions) {\n    const helper = new RuleHelper(context);\n    const ignoreNodeManager = new IgnoreNodeManager();\n    const { Syntax, RuleError, report, getSource } = context;\n    const showLevels = options.showLevels || defaultOptions.showLevels;\n    const ignoreTypes = options.ignoreTypes || defaultOptions.ignoreTypes;\n    const ignoreInlineNodeTypes = options.ignoreInlineNodeTypes || [Syntax.Code];\n    const isShowType = (type) => {\n        return ignoreTypes.indexOf(type) === -1;\n    };\n    const isShowLevel = (level) => {\n        return showLevels.indexOf(level) !== -1;\n    };\n    /*\n     {\n         // Type of check that output this suggestion\n         type: \"so\",\n\n         // Level of importance\n         // \"suggestion\", \"warning\", \"error\"\n         level: \"warning\",\n\n         // Index in the text\n         index: 10,\n\n         // Size of the section in the text\n         offset: 2,\n\n         // Message to describe the suggestion\n         message: \"omit 'So' from the beginning of sentences\",\n\n         // Replacements suggestion\n         replacements: [\n             {\n                value: \"\"\n             }\n         ]\n     }\n     */\n    const createSuggest = (replacements) => {\n        if (replacements.length === 0) {\n            return \"\";\n        }\n        return \"\\nSuggestions:\\n\"\n            + replacements.map(({ value }) => {\n                return \"=> \" + value;\n            }).join(\"\\n\");\n    };\n    const reportError = (node, source, result) => {\n        const level = result.level;\n        const type = result.type;\n        // if not contains showing options, ignore this result\n        if (!isShowLevel(level)) {\n            return;\n        }\n        if (!isShowType(type)) {\n            return;\n        }\n        const index = source.originalIndexFromIndex(result.index);\n        // if already ignored, should not report\n        if (ignoreNodeManager.isIgnoredIndex(index)) {\n            return;\n        }\n        const suggestions = createSuggest(result.replacements);\n        const ruleError = new RuleError(`${level}(${type}) ${result.message}${suggestions}`, {\n            index\n        });\n        report(node, ruleError);\n    };\n    return {\n        [Syntax.Paragraph](node) {\n            // ignore if wrapped node types\n            if (helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote, Syntax.Emphasis])) {\n                return;\n            }\n            // ignore if contain child node types\n            ignoreNodeManager.ignoreChildrenByTypes(node, ignoreInlineNodeTypes);\n            // check\n            // replace code with dummy code\n            // if you want to filter(remove) code, use https://github.com/eush77/unist-util-filter\n            const filteredNode = map(node, (node) => {\n                if (node.type === Syntax.Code) {\n                    // only change `value` to dummy\n                    return Object.assign({}, node, {\n                        value: new Array(node.value.length + 1).join(\"x\")\n                    });\n                }\n                return node;\n            });\n            if (!filteredNode) {\n                return;\n            }\n            const source = new StringSource(filteredNode);\n            const text = source.toString();\n            const reportSourceError = (results) => {\n                reportError(node, source, results);\n            };\n            rousseau(text, function (err, results) {\n                if (err) {\n                    throw err;\n                }\n                results.forEach(reportSourceError);\n            });\n        }\n    }\n};\n"],"mappings":"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"}
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var {
  matchPatterns
} = require("@textlint/regexp-string-matcher");
var defaultOptions = {
  allow: []
};
var reporter = function reporter(context) {
  var _options$allow;
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var {
    Syntax,
    RuleError,
    report,
    getSource,
    fixer
  } = context;
  var allow = (_options$allow = options.allow) !== null && _options$allow !== void 0 ? _options$allow : defaultOptions.allow;
  return {
    [Syntax.Str](node) {
      var text = getSource(node);
      var allowMatch = matchPatterns(text, allow);
      var regex = /\s{2,}/g;
      var _loop = function _loop() {
        var matches = regex.exec(text);
        if (!matches) return "break";
        var isAllow = allowMatch.some(m => m.startIndex < matches.index && matches.index < m.endIndex);
        if (!isAllow) {
          var replace = fixer.replaceTextRange([matches.index, matches.index + matches[0].length], " ");
          report(node, new RuleError("Found doubled spaces.", {
            index: matches.index,
            fix: replace
          }));
        }
      };
      while (true) {
        var _ret = _loop();
        if (_ret === "break") break;
      }
    }
  };
};
var _default = {
  linter: reporter,
  fixer: reporter
};
exports.default = _default;
//# sourceMappingURL=index.js.map